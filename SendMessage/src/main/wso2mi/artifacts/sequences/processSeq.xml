<?xml version="1.0" encoding="UTF-8"?>
<sequence name="processSeq" trace="disable" onError="onErrorSeq" xmlns="http://ws.apache.org/ns/synapse">

    <switch source="get-property('templateName')">
        <case regex="draft_psa_1a">
            <sequence key="templateDraftPSA_1a" />
        </case>
        <case regex="draft_psa_1a_dual">
            <sequence key="templateDraftPSA_1a_dual" />
        </case>
        <case regex="psa_7_bh">
            <sequence key="templatePSA_7_BH" />
        </case>
        <case regex="psa_7_2_bh">
            <sequence key="templatePSA_7_2_BH" />
        </case>
        <default>
            <sequence key="defaultSeq" />
        </default>
    </switch>
    <property name="infobipRequest" expression="json-eval($)" scope="default" />
    <property name="integrationNo" scope="transport" type="STRING" value="I1125" />
    <property name="type" scope="transport" type="STRING" value="Request from Kraft to Infobip" />
    <property name="messageId" scope="transport" type="STRING" expression="get-property('messageId')" />
    <log level="full">
        <property name="infobipRequest-----1--" expression="get-property('infobipRequest')"></property>
            <property name="infobipUrl--proc---" expression="get-property('infobipUrllll')" />
    </log>
    <call>
        <endpoint key="LogAPI" />
    </call>
    <property name="SC_ACCEPTED" value="false" scope="axis2"/>
    <payloadFactory media-type="json">
        <format>$1</format>
        <args>
            <arg evaluator="xml" expression="get-property('infobipRequest')"></arg>
        </args>
    </payloadFactory>
    <log level="full">
        <property name="infobipRequest-------" expression="get-property('infobipRequest')"></property>
        <property name="msg-------" expression="get-property('msg')"></property>
    </log>
    <log level="full">
        <property name="infobipRequest-------" expression="get-property('infobipRequest')"></property>
        <property name="msg-------" expression="get-property('msg')"></property>
    </log>
    <header name="Authorization" action="set" scope="transport" expression="get-property('infobipKey')" />
    <call>
        <endpoint key="infobipEP" />
    </call>
    <property name="statusCode" expression="get-property('axis2', 'HTTP_SC')"/>
    <property name="infobipResponse"  expression="json-eval($.)" />
    <property name="integrationNo" scope="transport" type="STRING" value="I1125" />
    <property name="type" scope="transport" type="STRING" value="Response from Infobip to Kraft" />
    <property name="messageId" scope="transport" type="STRING" expression="get-property('messageId')" />
    <call>
        <endpoint key="LogAPI" />
    </call>
    <property name="SC_ACCEPTED" value="false" scope="axis2"/>
    <payloadFactory media-type="json">
        <format>$1</format>
        <args>
            <arg evaluator="xml" expression="get-property('infobipResponse')"></arg>
        </args>
    </payloadFactory>

    <switch source="get-property('statusCode')">
        <case regex="200">
            <log level="full">
                <property name="200-----" value="--"></property>
            </log>
            <payloadFactory description="Create response payload" media-type="json">
                <format> { "to": "$1", "messageCount": $2, "messageId": "$3", "status": "$4", "description": "$5" } </format>
                    <args>
                        <arg evaluator="xml" expression="get-property('to')" />
                        <arg evaluator="json" expression="json-eval($.messages[0].messageCount)" />
                        <arg evaluator="json" expression="json-eval($.messages[0].messageId)" />
                        <arg evaluator="json" expression="json-eval($.messages[0].status.groupName)" />
                        <arg evaluator="json" expression="json-eval($.messages[0].status.description)" />
                </args>
            </payloadFactory>
            <property name="tmResponse" expression="json-eval($)" ></property>
        </case>
        <case regex="400">
            <log level="full">
                <property name="400-----" value="--"></property>
            </log>
            <payloadFactory description="Create response payload" media-type="json">
                <format>{ "to": "$1", "messageCount": 1, "messageId": "$2", "status": "FAILED", "description": $3 } </format>
                    <args>
                        <arg evaluator="xml" expression="get-property('to')" />
                        <arg evaluator="xml" expression="get-property('messageId')"/>
                        <arg evaluator="json"  expression="json-eval($.requestError.serviceException.validationErrors)"/>
                </args>
            </payloadFactory>
            <property name="tmResponse" expression="json-eval($)" ></property>
        </case>
        <default>
            <log level="full">
                <property name="else-----" value="--"></property>
            </log>
            <sequence key="errorSeq" />
        </default>
    </switch>

    <property name="integrationNo" scope="transport" type="STRING" value="I1125" />
    <property name="type" scope="transport" type="STRING" value="Response from Kraft to TM" />
    <call>
        <endpoint key="LogAPI" />
    </call>
    <property name="SC_ACCEPTED" value="false" scope="axis2"/>
    <property name="HTTP_SC" expression="get-property('statusCode')" scope="axis2"/>
    <payloadFactory media-type="json">
        <format> $1 </format>
        <args>
            <arg expression="get-property('tmResponse')"></arg>
        </args>
    </payloadFactory>
    <respond />
</sequence>